{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Automoton project for a basic automated infrastructure",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the newly created instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [
        "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large",
        "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
        "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large",
        "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge",
        "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge",
        "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
        "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"
      ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "NotificationEmail": {
      "Description": "Email address where confirmation email should be sent",
      "Type": "String"
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "AMI": "ami-08111162"
      },
      "us-west-1": {
        "AMI": "ami-1b0f7d7b"
      },
      "us-west-2": {
        "AMI": "ami-c229c0a2"
      },
      "eu-west-1": {
        "AMI": "ami-31328842"
      },
      "eu-central-1": {
        "AMI": "ami-e2df388d"
      }
    }
  },
  "Resources": {
    "WebEC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": { "Ref": "KeyName" },
        "ImageId": {
          "Fn::FindInMap" : [ "RegionMap", { "Ref": "AWS::Region" }, "AMI" ]
        },
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum -y update\n",
                "yum -y install git\n",
                "git clone https://github.com/tarkatronic/automoton.git\n",
                "pip install ansible\n",
                "/usr/local/bin/ansible-playbook -i 'localhost,' -c local automoton/deploy/web.yml",
                " --extra-vars 'notification_email=",
                { "Ref": "NotificationEmail" },
                "'"
              ]
            ]
          }
        }
      }
    },
    "WebSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow ssh and http traffic to web hosts",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22"
          }
        ]
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created EC2 instance",
      "Value": { "Ref": "WebEC2Instance" }
    },
    "AZ": {
      "Description": "Availability Zone of the newly created EC2 instance",
      "Value": { "Fn::GetAtt" : [ "WebEC2Instance", "AvailabilityZone" ] }
    },
    "PublicDNS": {
      "Description": "Public DNS name of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": [ "WebEC2Instance", "PublicDnsName" ] }
    },
    "PublicIP": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": [ "WebEC2Instance", "PublicIp" ] }
    }
  }
}
